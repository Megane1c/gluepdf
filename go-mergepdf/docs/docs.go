// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/sessions/": {
            "post": {
                "description": "Creates a new PDF merge session and returns a session ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Create a new session",
                "responses": {
                    "200": {
                        "description": "{ sessionId: string }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionID}/actions/merge": {
            "post": {
                "description": "Merges all uploaded files in the session and returns a download URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Merge uploaded files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{ downloadUrl: string }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "No files to merge",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Merge already in progress or done",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionID}/files": {
            "post": {
                "description": "Uploads a PDF file to the session",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload a PDF file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "PDF file",
                        "name": "pdf",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{ filename: string, size: int }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionID}/files/{filename}": {
            "get": {
                "description": "Downloads the merged PDF file for the session",
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Download merged PDF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Merged PDF filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file download",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access to file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Session or file not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionID}/order": {
            "put": {
                "description": "Sets the order of uploaded files for merging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Set file order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "{ files: [string] }",
                        "name": "files",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{ success: true }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionID}/sign": {
            "post": {
                "description": "Places a previously uploaded signature image on a PDF at the exact coordinates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signature"
                ],
                "summary": "Sign a PDF file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sign request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{ downloadUrl: string }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sessions/{sessionID}/signature": {
            "post": {
                "description": "Uploads a signature image (PNG/JPEG) to the session",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signature"
                ],
                "summary": "Upload a signature image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Signature image file (PNG/JPEG)",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{ filename: string, size: int }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid image format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
